name: "build-test"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - master
      - test-ts

runs-on: ubuntu-latest

jobs:
  setup:
    outputs:
      src: ${{ steps.findJekyll.outputs.jekyllSrc }}
      hash: ${{ steps.findJekyll.outputs.jekyllHash }}
    steps:
    - uses: actions/checkout@v2
    - id: findJekyll
      name: find jekyll directory
      run: |
        JEKYLL_SRC=$(find . -path ./vendor/bundle -prune -o -name _config.yml -exec dirname {} \; | tr -d '\n')
        JEKYLL_HASH=$(ls -alR --full-time ${JEKYLL_SRC} | sha1sum)
        echo "::set-output name=jekyllSrc::${JEKYLL_SRC}"
        echo "::set-output name=jekyllHash::${JEKYLL_HASH}"
    - name: Set up Ruby 2.7
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

  cache:
    needs: setup
    steps:
    - name: cache bundle files
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: tstest-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          tstest-${{ runner.os }}-gems-
    - name: cache jekyll files
      uses: actions/cache@v1
      with:
        path: ${{needs.setup.outputs.src}}/.jekyll-cache
        key: tstest-${{ runner.os }}-jekyll-${{needs.setup.outputs.hash}}
        restore-keys: |
          tstest-${{ runner.os }}-jekyll-

  build-deploy:
    needs: [setup, cache]
    steps:
    - uses: ./
      with:
        jekyll_src: ${{needs.setup.outputs.src}}
    - name: Deploy
      if: github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_site